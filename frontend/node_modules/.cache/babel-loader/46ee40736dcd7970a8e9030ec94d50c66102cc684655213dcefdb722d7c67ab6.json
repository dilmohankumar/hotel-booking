{"ast":null,"code":"/**\n * Flatten an array indefinitely.\n */\nexport function flatten(array) {\n  var result = [];\n  $flatten(array, result);\n  return result;\n}\n/**\n * Internal flatten function recursively passes `result`.\n */\nfunction $flatten(array, result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i];\n    if (Array.isArray(value)) {\n      $flatten(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n}","map":{"version":3,"mappings":"AAcA;;;AAGA,OAAM,SAAUA,OAAO,CAA2BC,KAAQ;EACxD,IAAMC,MAAM,GAAiB,EAAE;EAC/BC,QAAQ,CAAIF,KAAK,EAAEC,MAAM,CAAC;EAC1B,OAAOA,MAAM;AACf;AAEA;;;AAGA,SAASC,QAAQ,CACfF,KAAQ,EACRC,MAAoB;EAEpB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,IAAME,KAAK,GAAGL,KAAK,CAACG,CAAC,CAAC;IAEtB,IAAIG,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MACxBH,QAAQ,CAACG,KAAY,EAAEJ,MAAM,CAAC;KAC/B,MAAM;MACLA,MAAM,CAACO,IAAI,CAACH,KAAK,CAAC;;;AAGxB","names":["flatten","array","result","$flatten","i","length","value","Array","isArray","push"],"sources":["/Users/macbookpro/node_modules/router/node_modules/array-flatten/src/index.ts"],"sourcesContent":["/**\n * Pick the value from an array.\n */\nexport type PickValue<T> = T extends ReadonlyArray<any>\n  ? {\n      [K in Extract<keyof T, number>]: PickValue<T[K]>;\n    }[number]\n  : T;\n\n/**\n * Flatten an `ArrayLike` object in TypeScript.\n */\nexport type FlatArray<T extends ArrayLike<any>> = Array<PickValue<T[number]>>;\n\n/**\n * Flatten an array indefinitely.\n */\nexport function flatten<T extends ArrayLike<any>>(array: T): FlatArray<T> {\n  const result: FlatArray<T> = [];\n  $flatten<T>(array, result);\n  return result;\n}\n\n/**\n * Internal flatten function recursively passes `result`.\n */\nfunction $flatten<T extends ArrayLike<any>>(\n  array: T,\n  result: FlatArray<T>\n): void {\n  for (let i = 0; i < array.length; i++) {\n    const value = array[i];\n\n    if (Array.isArray(value)) {\n      $flatten(value as any, result);\n    } else {\n      result.push(value);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}