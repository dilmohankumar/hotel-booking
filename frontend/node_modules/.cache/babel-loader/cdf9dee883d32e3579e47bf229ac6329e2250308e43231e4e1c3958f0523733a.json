{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    let isMounted = true; // To check if the component is still mounted\n\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const res = await fetch(url);\n        if (!res.ok) {\n          throw new Error(\"Failed to fetch data\");\n        }\n        const result = await res.json();\n        if (isMounted) {\n          setData(result.data);\n          setLoading(false);\n        }\n      } catch (err) {\n        if (isMounted) {\n          setError(err.message);\n          setLoading(false);\n        }\n      }\n    };\n    fetchData();\n    return () => {\n      // Cleanup function to cancel any ongoing requests\n      isMounted = false;\n    };\n  }, [url]);\n  return {\n    data,\n    error,\n    loading\n  };\n};\n_s(useFetch, \"6nhoqVvctpRRYiww7uwVz/g7/BM=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","_s","data","setData","error","setError","loading","setLoading","isMounted","fetchData","res","fetch","ok","Error","result","json","err","message"],"sources":["/Users/macbookpro/Desktop/tour-management/frontend/src/hooks/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = (url) => {\n    const [data, setData] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        let isMounted = true; // To check if the component is still mounted\n\n        const fetchData = async () => {\n            setLoading(true);\n            try {\n                const res = await fetch(url);\n\n                if (!res.ok) {\n                    throw new Error(\"Failed to fetch data\");\n                }\n\n                const result = await res.json();\n\n                if (isMounted) {\n                    setData(result.data);\n                    setLoading(false);\n                }\n            } catch (err) {\n                if (isMounted) {\n                    setError(err.message);\n                    setLoading(false);\n                }\n            }\n        };\n\n        fetchData();\n\n        return () => {\n            // Cleanup function to cancel any ongoing requests\n            isMounted = false;\n        };\n\n    }, [url]);\n\n    return {\n        data,\n        error,\n        loading,\n    };\n};\n\nexport default useFetch;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACZ,IAAIW,SAAS,GAAG,IAAI,CAAC,CAAC;;IAEtB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BF,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAACX,GAAG,CAAC;QAE5B,IAAI,CAACU,GAAG,CAACE,EAAE,EAAE;UACT,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QAC3C;QAEA,MAAMC,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;QAE/B,IAAIP,SAAS,EAAE;UACXL,OAAO,CAACW,MAAM,CAACZ,IAAI,CAAC;UACpBK,UAAU,CAAC,KAAK,CAAC;QACrB;MACJ,CAAC,CAAC,OAAOS,GAAG,EAAE;QACV,IAAIR,SAAS,EAAE;UACXH,QAAQ,CAACW,GAAG,CAACC,OAAO,CAAC;UACrBV,UAAU,CAAC,KAAK,CAAC;QACrB;MACJ;IACJ,CAAC;IAEDE,SAAS,CAAC,CAAC;IAEX,OAAO,MAAM;MACT;MACAD,SAAS,GAAG,KAAK;IACrB,CAAC;EAEL,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,OAAO;IACHE,IAAI;IACJE,KAAK;IACLE;EACJ,CAAC;AACL,CAAC;AAACL,EAAA,CA7CIF,QAAQ;AA+Cd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}